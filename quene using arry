#include<stdio.h>
#include<stdlib.h>
#define size 19
struct quene
{
	int a[20];
	int r,f;
};
struct quene insert_rear(struct quene,int);
int del_front(struct quene*);
void print(struct quene);
int main()
{
	struct quene q;
	int ele,ch;
	q.r=-1;
	q.f=0;
	printf("1.insertion\n 2.deletion\n 3.display\n 4.exit\n");
	do
	{
		printf("enter choice");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:q=insert_rear(q,ele);
			        break;
			case 2:ele=del_front(&q);
			        break;
			case 3:print(q);
			        break;
			case 4:exit(0);
			        break;
			default:printf("enter correct choice");
		 }
		 printf("\n");
	  }
	  while(ch<5);
}
struct quene insert_rear(struct quene q,int ele)
{
	printf("enter a value");
	scanf("%d",&ele);
	if(q.r<size-1)
	{
		q.r++;
		q.a[q.r]=ele;
	}
	else
	{
		printf("quene is full\n");
	}
	return q;
}
int del_front(struct quene *q)
{
	int ele;
	if(q->f>q->r)
	{
		printf("quene is full\n");
	}
	else
	{
		ele=q->a[q->f];
		q->f++;
		printf("remove ele=%d\n",ele);
	}
	printf("\n");
	return ele;
}
void print(struct quene q)
{
	int i;
	if(q.r<q.f)
	{
		printf("quene is empty");
	}
	else
	{
		for(i=q.f;i<=q.r;i++)
		{
			printf("a[%d]=%d",i,q.a[i]);
		}
	}
}
			
	
		
